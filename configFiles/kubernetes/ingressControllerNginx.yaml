kind: ConfigMap
apiVersion: v1
metadata:
  name: ingress-controller-nginx-conf
  labels:
    app: ingress-controller-nginx
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: ingress-controller-nginx-tcp-services
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: ingress-controller-nginx-udp-services
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx-ingress-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-controller-nginx
  template:
    metadata:
      labels:
        app: ingress-controller-nginx
      annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true' 
    spec:
      initContainers:
      - command:
        - sh
        - -c
        - sysctl -w net.core.somaxconn=32768; sysctl -w net.ipv4.ip_local_port_range="1024 65535"
        image: alpine:3.6
        imagePullPolicy: IfNotPresent
        name: sysctl
        securityContext:
          privileged: true
      containers:
        - name: nginx-ingress-controller
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.10.1
          args:
            - /nginx-ingress-controller
            - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
            - --configmap=$(POD_NAMESPACE)/ingress-controller-nginx-conf
            - --tcp-services-configmap=$(POD_NAMESPACE)/ingress-controller-nginx-tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/ingress-controller-nginx-udp-services
            - --default-ssl-certificate=$(POD_NAMESPACE)/tls-secret
            - --annotations-prefix=nginx.ingress.kubernetes.io
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
          - name: http
            containerPort: 80
          - name: https
            containerPort: 443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1